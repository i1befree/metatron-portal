spring:
  profiles:
    active: incross-db,exntu-dev,log,batch
  jmx:
    enabled: false
  # HTTP
  http:
    multipart:
        max-file-size: 20480MB
        max-request-size: 20480MB

## LOG 설정
logging:
  config: classpath:logback.xml

# WAS 설정
server:
  port: 8880
  display-name: metatron-portal-server
  session:
    timeout: 600
  context-path: /

swagger: '2.0'
info:
  title: METATRON API
  version: '1'
paths:
  /api/analysis-apps:
    post:
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
      produces:
        - text/plain
      responses:
        '201':
          description: OK
          schema:
            type: string
            example: "File upload successful"

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# DB Profile
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
---
spring:
  profiles: local-db
  # DB
  datasource:
    platform: mysql
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/portal?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password:
    max-active: 10
    max-idle: 10
    min-idle: 10
    initial-size: 10
    test-on-borrow: false
    test-on-return: false
    test-while-idle: true
    max-wait: 1000
    validation-query: SELECT 1
  jpa:
    database: mysql
    show-sql: false
    hibernate:
#      ddl-auto: create
#      show-sql: true
      naming_strategy: org.hibernate.cfg.EJB3NamingStrategy
    properties:
      hibernate:
        format_sql: false
        hbm2ddl:
#          auto: create
#          auto: update
          import_files: /sql/init-oauth-spec.sql,/sql/init-mp-common.sql,/sql/init-mp-ia.sql,/sql/init-mp-user-prd.sql,/sql/init-mp-comm.sql
---
spring:
  profiles: dev-db
  # DB
  datasource:
    platform: mysql
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/portal?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password: root
    max-active: 10
    max-idle: 10
    min-idle: 10
    initial-size: 10
    test-on-borrow: false
    test-on-return: false
    test-while-idle: true
    max-wait: 1000
    validation-query: SELECT 1
  jpa:
    database: mysql
    show-sql: false
    hibernate:
#      ddl-auto: create
#      show-sql: true
      naming_strategy: org.hibernate.cfg.EJB3NamingStrategy
    properties:
      hibernate:
        format_sql: false
        hbm2ddl:
#         auto: create
          auto: update
          import_files: /sql/init-oauth-spec.sql,/sql/init-mp-common.sql,/sql/init-mp-ia.sql,/sql/init-mp-user-prd.sql,/sql/init-mp-comm.sql
---
spring:
  profiles: incross-db
  # DB
  datasource:
    platform: mysql
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3307/portal?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: portal_user
    password: portal_user_00
    max-active: 10
    max-idle: 10
    min-idle: 10
    initial-size: 10
    test-on-borrow: false
    test-on-return: false
    test-while-idle: true
    max-wait: 1000
    validation-query: SELECT 1
  jpa:
    database: mysql
    show-sql: false
    hibernate:
      #      ddl-auto: create
      #      show-sql: true
      naming_strategy: org.hibernate.cfg.EJB3NamingStrategy
    properties:
      hibernate:
        format_sql: false
        hbm2ddl:
          #          auto: create
          auto: update
          import_files: /sql/init-oauth-spec.sql,/sql/init-mp-common.sql,/sql/init-mp-ia.sql,/sql/init-mp-user-prd.sql,/sql/init-mp-comm.sql
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Server Profile
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
---
spring:
  profiles: exntu-local
  data:
    elasticsearch:
      cluster-nodes: localhost:9300
      cluster-name: nmc-cluster
      properties:
        transport:
          tcp:
            connect_timeout: 60s
app:
  sso:
    metatron-basic-token: cG9sYXJpc19jbGllbnQ6cG9sYXJpcw==
    metatron-admin-id: admin
    metatron-admin-pw: admin
    metatron-url: http://52.231.189.217:8180
metatron:
  path:
    workbook-share-path: ${app.sso.metatron-url}/app/v2/dashboard/presentation/
    dashboard-share-path: ${app.sso.metatron-url}/app/v2/embedded/dashboard/
  datasource:
    url: jdbc:mysql://exntu.kr:13306/polaris?useUnicode=true&amp;characterEncoding=utf8
    driver-class-name : com.mysql.jdbc.Driver
    username: polaris
    password: polaris
# Security 설정
security:
  basic:
    enabled: false
  oauth2:
    # OAuth 서버 Client 정보
    client:
      client-id: metatron-portal
      client-secret: metatron-portal-secret
      access-token-uri: http://localhost:8880/oauth/token
      user-authorization-uri: http://localhost:8880/oauth/authorize
    resource:
      token-info-uri: http://localhost:8880/oauth/check_token

config:
  token:
    url: http://localhost:8880/oauth/token
    basic-token: bWV0YXRyb24tcG9ydGFsOm1ldGF0cm9uLXBvcnRhbC1zZWNyZXQ=
  media:
    temp: /User/sms/temp/tmp
  timezone: Asia/Seoul
  upload:
    path: /User/sms/temp/upload

---
spring:
  profiles: exntu-dev
  data:
    elasticsearch:
      cluster-nodes: localhost:9300
      cluster-name: nmc-cluster
      properties:
        transport:
          tcp:
            connect_timeout: 60s
app:
  sso:
    metatron-basic-token: cG9sYXJpc19jbGllbnQ6cG9sYXJpcw==
    metatron-admin-id: polaris
    metatron-admin-pw: polaris
    metatron-url: http://skt-campaignhub.koreacentral.cloudapp.azure.com:8281
metatron:
  path:
    workbook-share-path: ${app.sso.metatron-url}/app/v2/dashboard/presentation/
    dashboard-share-path: ${app.sso.metatron-url}/app/v2/embedded/dashboard/
  datasource:
    url: jdbc:mysql://metatron-web-01:3306/polaris_enter?useUnicode=true&amp;characterEncoding=utf8
    driver-class-name : com.mysql.jdbc.Driver
    username: polaris_enter
    password: polaris$00
# Security 설정
security:
  basic:
    enabled: false
  oauth2:
    # OAuth 서버 Client 정보
    client:
      client-id: metatron-portal
      client-secret: metatron-portal-secret
      access-token-uri: http://localhost:8880/oauth/token
      user-authorization-uri: http://localhost:8880/oauth/authorize
    resource:
      token-info-uri: http://localhost:8880/oauth/check_token

config:
  token:
    url: http://localhost:8880/oauth/token
    basic-token: bWV0YXRyb24tcG9ydGFsOm1ldGF0cm9uLXBvcnRhbC1zZWNyZXQ=
  media:
    temp: /Users/ayhwang/data/enterprise/portal/temp
  timezone: Asia/Seoul
  upload:
    path: /Users/ayhwang/data/enterprise/portal/upload
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Log Profile
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
---
spring:
  profiles: log
  # JPA
#  jpa:
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true

## LOG 설정
logging:
  config: classpath:logback.xml
---
spring:
  profiles: log-file
  # JPA
#  jpa:
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true

## LOG 설정
logging:
  config: classpath:logback_file.xml
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Batch Profile
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
---
spring:
  profiles: batch
app:
  batch:
    isRun: true
  cron:
    elastic-search-indexing: 0 0 0 ? * *
    elastic-search-index-delete: 0 0 4 ? * *
    elastic-search-index-comm: 0 0/5 * ? * *
    elastic-search-index-app: 0 0/30 * ? * *
    user-batch: 0 0/5 * * * ?
---
